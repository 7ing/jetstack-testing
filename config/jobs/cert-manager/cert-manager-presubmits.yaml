.minikube_small: &minikube_small
  resources:
    requests:
      cpu: 2900m
      memory: 8Gi

presets:
- labels:
    cert-manager-cloudflare-svc-acct: "true"
  env:
  - name: CLOUDFLARE_E2E_API_TOKEN
    valueFrom:
      secretKeyRef:
        name: cloudflare-api-key
        key: api-token
  - name: CLOUDFLARE_E2E_EMAIL
    valueFrom:
      secretKeyRef:
        name: cloudflare-api-key
        key: email
  - name: CLOUDFLARE_E2E_DOMAIN
    valueFrom:
      secretKeyRef:
        name: cloudflare-api-key
        key: domain

presubmits:
  jetstack/cert-manager:

  - name: pull-cert-manager-chart-verify
    always_run: true
    context: pull-cert-manager-chart-verify
    max_concurrency: 4
    agent: kubernetes
    decorate: true
    labels:
      preset-service-account: "true"
      preset-dind-enabled: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-bazel-scratch-dir: "true"
    spec:
      containers:
      - image: eu.gcr.io/jetstack-build-infra-images/bazelbuild:v20180831-a4c5a2b-0.16.1
        args:
        - runner
        - /bin/bash
        - -c
        - |
          #!/bin/bash
          set -o errexit
          set -o nounset
          set -o pipefail

          ./hack/verify-chart-version.sh
          IMAGE=eu.gcr.io/jetstack-build-infra/gen-apidocs-img ./hack/verify-reference-docs.sh
        resources:
          requests:
            cpu: 1
            memory: 1Gi
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
    trigger: "(?m)^/test( all| chart-verify),?(\\s+|$)"
    rerun_command: "/test chart-verify"

  - name: pull-cert-manager-verify
    always_run: true
    skip_report: false
    context: pull-cert-manager-verify
    max_concurrency: 2
    agent: kubernetes
    labels:
      preset-service-account: "true"
    spec:
      containers:
      - image: eu.gcr.io/jetstack-build-infra-images/gcloud-in-go:v20180905-55cbcb7
        args:
        - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--upload=gs://jetstack-logs/pr-logs"
        - "--clean"
        resources:
          requests:
            cpu: 1
            memory: 1Gi
    trigger: "(?m)^/test( all| verify),?(\\s+|$)"
    rerun_command: "/test verify"

  # kind based cert-manager e2e job
  - name: pull-cert-manager-e2e-v1-11
    skip_report: false
    context: pull-cert-manager-e2e-v1-11
    # Match everything except PRs that only touch docs/
    always_run: false
    run_if_changed: (^[^d].*$)|(^.[^o].*$)|(^..[^c].*$)|(^...[^s].*$)|(^....[^/].*$)
    max_concurrency: 4
    agent: kubernetes
    decorate: true
    labels:
      preset-service-account: "true"
      preset-dind-enabled: "true"
    spec:
      containers:
      - image: eu.gcr.io/jetstack-build-infra-images/cert-manager-e2e:v20180907-14386ae-0.16.1
        args:
        - runner
        - hack/ci/run-e2e-kind.sh
        resources:
          requests:
            cpu: 2
            memory: 6Gi
        env:
        - name: KIND_IMAGE
          value: eu.gcr.io/jetstack-build-infra-images/kind:1.11.2-0
        securityContext:
          privileged: true
          capabilities:
            add: ["SYS_ADMIN"]
        volumeMounts:
        - mountPath: /lib/modules
          name: modules
          readOnly: true
        - mountPath: /sys/fs/cgroup
          name: cgroup
      volumes:
      - name: modules
        hostPath:
          path: /lib/modules
          type: Directory
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: Directory
    trigger: "(?m)^/test( e2e( v?1.11)?|)( \\[.+\\])?$"
    rerun_command: "/test e2e v1.11"

  # we don't have a 1.10 job as kind does not support kubernetes 1.10
