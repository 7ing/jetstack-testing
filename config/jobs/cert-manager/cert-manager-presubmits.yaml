presets:
- labels:
    cert-manager-cloudflare-svc-acct: "true"
  env:
  - name: CLOUDFLARE_E2E_API_TOKEN
    valueFrom:
      secretKeyRef:
        name: cloudflare-api-key
        key: api-token
  - name: CLOUDFLARE_E2E_EMAIL
    valueFrom:
      secretKeyRef:
        name: cloudflare-api-key
        key: email
  - name: CLOUDFLARE_E2E_DOMAIN
    valueFrom:
      secretKeyRef:
        name: cloudflare-api-key
        key: domain

presubmits:
  jetstack/cert-manager:

  - name: pull-cert-manager-bazel
    always_run: true
    context: pull-cert-manager-bazel
    max_concurrency: 8
    agent: kubernetes
    decorate: true
    branches:
    - master
    # Include release-0.6 whilst we are fast-forwarding to tip of master
    - release-0.6
    labels:
      preset-service-account: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-bazel-scratch-dir: "true"
    spec:
      containers:
      - image: eu.gcr.io/jetstack-build-infra-images/bazelbuild:v20181107-8aac55d-0.18.0
        args:
        - runner
        - bazel
        - test
        - //...
        resources:
          requests:
            cpu: 2
            memory: 4Gi
    trigger: "(?m)^/test verify,?(\\s+|$)"
    rerun_command: "/test verify"

  # Helm chart verification currently requires Docker.
  # We maintain a standalone presubmit for running this.
  # See https://github.com/helm/chart-testing/issues/53
  - name: pull-cert-manager-chart
    always_run: true
    context: pull-cert-manager-chart
    max_concurrency: 8
    agent: kubernetes
    decorate: true
    branches:
    - master
    # Include release-0.6 whilst we are fast-forwarding to tip of master
    - release-0.6
    labels:
      preset-service-account: "true"
      preset-dind-enabled: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-bazel-scratch-dir: "true"
    spec:
      containers:
      - image: eu.gcr.io/jetstack-build-infra-images/bazelbuild:v20181107-8aac55d-0.18.0
        args:
        - runner
        - make
        - verify_chart
        resources:
          requests:
            cpu: 1
            memory: 1Gi
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
    trigger: "(?m)^/test( all| chart),?(\\s+|$)"
    rerun_command: "/test chart"

  - name: pull-cert-manager-deps
    always_run: true
    context: pull-cert-manager-deps
    max_concurrency: 4
    agent: kubernetes
    decorate: true
    branches:
    - master
    # Include release-0.6 whilst we are fast-forwarding to tip of master
    - release-0.6
    labels:
      preset-service-account: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-bazel-scratch-dir: "true"
    spec:
      containers:
      - image: eu.gcr.io/jetstack-build-infra-images/bazelbuild:v20181107-8aac55d-0.18.0
        args:
        - runner
        - make
        - verify_deps
        resources:
          requests:
            cpu: 1
            memory: 1Gi
    trigger: "(?m)^/test deps,?(\\s+|$)"
    rerun_command: "/test deps"

  # kind based cert-manager e2e job
  - name: pull-cert-manager-e2e-v1-11
    context: pull-cert-manager-e2e-v1-11
    # Match everything except PRs that only touch docs/
    always_run: false
    run_if_changed: (^[^d].*$)|(^.[^o].*$)|(^..[^c].*$)|(^...[^s].*$)|(^....[^/].*$)
    max_concurrency: 4
    agent: kubernetes
    decorate: true
    branches:
    - master
    # Include release-0.6 whilst we are fast-forwarding to tip of master
    - release-0.6
    labels:
      preset-service-account: "true"
      preset-dind-enabled: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-bazel-scratch-dir: "true"
      cert-manager-cloudflare-svc-acct: "true"
    spec:
      containers:
      - image: eu.gcr.io/jetstack-build-infra-images/bazelbuild:v20181107-8aac55d-0.18.0
        args:
        - runner
        - hack/ci/run-e2e-kind.sh
        resources:
          requests:
            cpu: 2
            memory: 6Gi
        env:
        # TODO: remove this after https://github.com/jetstack/cert-manager/pull/1215 merges
        - name: KIND_IMAGE
          value: eu.gcr.io/jetstack-build-infra-images/kind:1.11.4-1
        # The Bazel target used to build the kind cluster
        - name: KIND_TARGET
          value: //test/e2e:e2e-1.11
        securityContext:
          privileged: true
          capabilities:
            add: ["SYS_ADMIN"]
        volumeMounts:
        - mountPath: /lib/modules
          name: modules
          readOnly: true
        - mountPath: /sys/fs/cgroup
          name: cgroup
      volumes:
      - name: modules
        hostPath:
          path: /lib/modules
          type: Directory
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: Directory
    trigger: "(?m)^/test( e2e( v?1.11)?|)( \\[.+\\])?$"
    rerun_command: "/test e2e v1.11"

  - name: pull-cert-manager-e2e-v1-12
    context: pull-cert-manager-e2e-v1-12
    # Match everything except PRs that only touch docs/
    always_run: false
    run_if_changed: (^[^d].*$)|(^.[^o].*$)|(^..[^c].*$)|(^...[^s].*$)|(^....[^/].*$)
    max_concurrency: 4
    agent: kubernetes
    decorate: true
    branches:
    - master
    # Include release-0.6 whilst we are fast-forwarding to tip of master
    - release-0.6
    labels:
      preset-service-account: "true"
      preset-dind-enabled: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-bazel-scratch-dir: "true"
      cert-manager-cloudflare-svc-acct: "true"
    spec:
      containers:
      - image: eu.gcr.io/jetstack-build-infra-images/bazelbuild:v20181107-8aac55d-0.18.0
        args:
        - runner
        - hack/ci/run-e2e-kind.sh
        resources:
          requests:
            cpu: 2
            memory: 6Gi
        env:
        # TODO: remove this after https://github.com/jetstack/cert-manager/pull/1215 merges
        - name: KIND_IMAGE
          value: eu.gcr.io/jetstack-build-infra-images/kind:1.12.2-1
        # The Bazel target used to build the kind cluster
        - name: KIND_TARGET
          value: //test/e2e:e2e-1.12
        securityContext:
          privileged: true
          capabilities:
            add: ["SYS_ADMIN"]
        volumeMounts:
        - mountPath: /lib/modules
          name: modules
          readOnly: true
        - mountPath: /sys/fs/cgroup
          name: cgroup
      volumes:
      - name: modules
        hostPath:
          path: /lib/modules
          type: Directory
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: Directory
    trigger: "(?m)^/test( e2e( v?1.12)?|)( \\[.+\\])?$"
    rerun_command: "/test e2e v1.12"

  # we don't have a 1.10 job as kind does not support kubernetes 1.10
