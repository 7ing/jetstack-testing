presets:
- labels:
    cert-manager-cloudflare-svc-acct: "true"
  env:
  - name: CLOUDFLARE_E2E_API_TOKEN
    valueFrom:
      secretKeyRef:
        name: cloudflare-api-key
        key: api-token
  - name: CLOUDFLARE_E2E_EMAIL
    valueFrom:
      secretKeyRef:
        name: cloudflare-api-key
        key: email
  - name: CLOUDFLARE_E2E_DOMAIN
    valueFrom:
      secretKeyRef:
        name: cloudflare-api-key
        key: domain

presubmits:
  jetstack/cert-manager:

  - name: pull-cert-manager-docs
    always_run: true
    context: pull-cert-manager-docs
    max_concurrency: 4
    agent: kubernetes
    decorate: true
    branches:
    - master
    labels:
      preset-service-account: "true"
      preset-dind-enabled: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-bazel-scratch-dir: "true"
    spec:
      containers:
      - image: eu.gcr.io/jetstack-build-infra-images/cert-manager-e2e:v20181022-34682de-0.18.0
        args:
        - runner
        - make
        - verify_docs
        env:
        - name: IMAGE
          value: eu.gcr.io/jetstack-build-infra/gen-apidocs-img
        resources:
          requests:
            cpu: 1
            memory: 1Gi
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
    trigger: "(?m)^/test( all| docs),?(\\s+|$)"
    rerun_command: "/test docs"

  - name: pull-cert-manager-chart
    always_run: true
    context: pull-cert-manager-chart
    max_concurrency: 4
    agent: kubernetes
    decorate: true
    branches:
    - master
    labels:
      preset-service-account: "true"
      preset-dind-enabled: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-bazel-scratch-dir: "true"
    spec:
      containers:
      - image: eu.gcr.io/jetstack-build-infra-images/cert-manager-e2e:v20181022-34682de-0.18.0
        args:
        - runner
        - make
        - verify_chart
        resources:
          requests:
            cpu: 1
            memory: 1Gi
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
    trigger: "(?m)^/test( all| chart),?(\\s+|$)"
    rerun_command: "/test chart"

  - name: pull-cert-manager-codegen
    always_run: true
    skip_report: false
    context: pull-cert-manager-codegen
    max_concurrency: 2
    agent: kubernetes
    decorate: true
    branches:
    - master
    labels:
      preset-service-account: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-bazel-scratch-dir: "true"
    spec:
      containers:
      - image: eu.gcr.io/jetstack-build-infra-images/cert-manager-e2e:v20181022-34682de-0.18.0
        args:
        - runner
        - make
        - verify_codegen
        resources:
          requests:
            cpu: 1
            memory: 1Gi
    trigger: "(?m)^/test codegen,?(\\s+|$)"
    rerun_command: "/test codegen"

  - name: pull-cert-manager-deps
    run_if_changed: "^(Gopkg\\.|^vendor/).*$"
    skip_report: false
    context: pull-cert-manager-deps
    max_concurrency: 2
    agent: kubernetes
    decorate: true
    branches:
    - master
    labels:
      preset-service-account: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-bazel-scratch-dir: "true"
    spec:
      containers:
      - image: eu.gcr.io/jetstack-build-infra-images/cert-manager-e2e:v20181022-34682de-0.18.0
        args:
        - runner
        - make
        - verify_deps
        resources:
          requests:
            cpu: 1
            memory: 1Gi
    trigger: "(?m)^/test deps,?(\\s+|$)"
    rerun_command: "/test deps"

  - name: pull-cert-manager-unit
    always_run: true
    skip_report: false
    context: pull-cert-manager-unit
    max_concurrency: 2
    agent: kubernetes
    decorate: true
    branches:
    - master
    labels:
      preset-service-account: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-bazel-scratch-dir: "true"
    spec:
      containers:
      - image: eu.gcr.io/jetstack-build-infra-images/cert-manager-e2e:v20181022-34682de-0.18.0
        args:
        - runner
        - make
        - verify_unit
        resources:
          requests:
            cpu: 1
            memory: 1Gi
    trigger: "(?m)^/test unit,?(\\s+|$)"
    rerun_command: "/test unit"

  - name: pull-cert-manager-lint
    always_run: true
    skip_report: false
    context: pull-cert-manager-lint
    max_concurrency: 2
    agent: kubernetes
    decorate: true
    branches:
    - master
    labels:
      preset-service-account: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-bazel-scratch-dir: "true"
    spec:
      containers:
      - image: eu.gcr.io/jetstack-build-infra-images/cert-manager-e2e:v20181022-34682de-0.18.0
        args:
        - runner
        - make
        - verify_lint
        resources:
          requests:
            cpu: 1
            memory: 1Gi
    trigger: "(?m)^/test lint,?(\\s+|$)"
    rerun_command: "/test lint"

  # kind based cert-manager e2e job
  - name: pull-cert-manager-e2e-v1-11
    skip_report: false
    context: pull-cert-manager-e2e-v1-11
    # Match everything except PRs that only touch docs/
    always_run: false
    run_if_changed: (^[^d].*$)|(^.[^o].*$)|(^..[^c].*$)|(^...[^s].*$)|(^....[^/].*$)
    max_concurrency: 4
    agent: kubernetes
    decorate: true
    branches:
    - master
    labels:
      preset-service-account: "true"
      preset-dind-enabled: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-bazel-scratch-dir: "true"
      cert-manager-cloudflare-svc-acct: "true"
    spec:
      containers:
      - image: eu.gcr.io/jetstack-build-infra-images/cert-manager-e2e:v20181022-34682de-0.18.0
        args:
        - runner
        - hack/ci/run-e2e-kind.sh
        resources:
          requests:
            cpu: 2
            memory: 6Gi
        env:
        - name: KIND_IMAGE
          value: eu.gcr.io/jetstack-build-infra-images/kind:1.11.2-0
        securityContext:
          privileged: true
          capabilities:
            add: ["SYS_ADMIN"]
        volumeMounts:
        - mountPath: /lib/modules
          name: modules
          readOnly: true
        - mountPath: /sys/fs/cgroup
          name: cgroup
      volumes:
      - name: modules
        hostPath:
          path: /lib/modules
          type: Directory
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: Directory
    trigger: "(?m)^/test( e2e( v?1.11)?|)( \\[.+\\])?$"
    rerun_command: "/test e2e v1.11"

  - name: pull-cert-manager-e2e-v1-12
    skip_report: false
    context: pull-cert-manager-e2e-v1-12
    # Match everything except PRs that only touch docs/
    always_run: false
    run_if_changed: (^[^d].*$)|(^.[^o].*$)|(^..[^c].*$)|(^...[^s].*$)|(^....[^/].*$)
    max_concurrency: 4
    agent: kubernetes
    decorate: true
    branches:
    - master
    labels:
      preset-service-account: "true"
      preset-dind-enabled: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-bazel-scratch-dir: "true"
      cert-manager-cloudflare-svc-acct: "true"
    spec:
      containers:
      - image: eu.gcr.io/jetstack-build-infra-images/cert-manager-e2e:v20181022-34682de-0.18.0
        args:
        - runner
        - hack/ci/run-e2e-kind.sh
        resources:
          requests:
            cpu: 2
            memory: 6Gi
        env:
        - name: KIND_IMAGE
          value: eu.gcr.io/jetstack-build-infra-images/kind:1.12.1-0
        securityContext:
          privileged: true
          capabilities:
            add: ["SYS_ADMIN"]
        volumeMounts:
        - mountPath: /lib/modules
          name: modules
          readOnly: true
        - mountPath: /sys/fs/cgroup
          name: cgroup
      volumes:
      - name: modules
        hostPath:
          path: /lib/modules
          type: Directory
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: Directory
    trigger: "(?m)^/test( e2e( v?1.12)?|)( \\[.+\\])?$"
    rerun_command: "/test e2e v1.12"

  # we don't have a 1.10 job as kind does not support kubernetes 1.10
