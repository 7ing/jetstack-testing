presubmits:
  jetstack/cert-manager:

  - name: pull-cert-manager-bazel
    always_run: true
    context: pull-cert-manager-bazel
    max_concurrency: 8
    agent: kubernetes
    decorate: true
    branches:
    - release-1.7
    - release-1.6
    annotations:
      testgrid-create-test-group: 'false'
    labels:
      preset-service-account: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-bazel-scratch-dir: "true"
    spec:
      containers:
      - image: eu.gcr.io/jetstack-build-infra-images/bazelbuild:20210831-4cf7b0b-4.2.1
        args:
        - runner
        - bazel
        - test
        - --jobs=1
        - //...
        resources:
          requests:
            cpu: 2
            memory: 4Gi
      dnsConfig:
        options:
          - name: ndots
            value: "1"

  - name: pull-cert-manager-bazel-experimental
    always_run: false
    optional: true
    context: pull-cert-manager-bazel-experimental
    max_concurrency: 8
    agent: kubernetes
    decorate: true
    branches:
    - release-1.7
    - release-1.6
    annotations:
      testgrid-create-test-group: 'false'
      description: Runs 'bazel test --jobs=1 //...' using the 'experimental' Bazel version
    labels:
      preset-service-account: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-bazel-scratch-dir: "true"
    spec:
      containers:
      - image: eu.gcr.io/jetstack-build-infra-images/bazelbuild:20210831-4cf7b0b-experimental
        args:
        - runner
        - bazel
        - test
        - --jobs=1
        - //...
        resources:
          requests:
            cpu: 2
            memory: 4Gi
      dnsConfig:
        options:
          - name: ndots
            value: "1"

  # Helm chart verification currently requires Docker.
  # We maintain a standalone presubmit for running this.
  # See https://github.com/helm/chart-testing/issues/53
  - name: pull-cert-manager-chart
    always_run: true
    context: pull-cert-manager-chart
    max_concurrency: 8
    agent: kubernetes
    decorate: true
    branches:
    - release-1.7
    - release-1.6
    annotations:
      testgrid-create-test-group: 'false'
      description: Verifies the Helm chart passes linting checks
    labels:
      preset-service-account: "true"
      preset-dind-enabled: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-bazel-scratch-dir: "true"
    spec:
      containers:
      - image: eu.gcr.io/jetstack-build-infra-images/bazelbuild:20210831-4cf7b0b-4.2.1
        args:
        - runner
        - make
        - verify_chart
        resources:
          requests:
            cpu: 1
            memory: 1Gi
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
      dnsConfig:
        options:
          - name: ndots
            value: "1"

  - name: pull-cert-manager-deps
    always_run: true
    context: pull-cert-manager-deps
    max_concurrency: 4
    agent: kubernetes
    decorate: true
    branches:
    - release-1.7
    - release-1.6
    annotations:
      testgrid-create-test-group: 'false'
      description: Verifies dependency related files are up to date
    labels:
      preset-service-account: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-bazel-scratch-dir: "true"
    spec:
      containers:
      - image: eu.gcr.io/jetstack-build-infra-images/bazelbuild:20210831-4cf7b0b-4.2.1
        args:
        - runner
        - make
        - verify_deps
        resources:
          requests:
            cpu: 2
            memory: 4Gi
      dnsConfig:
        options:
          - name: ndots
            value: "1"

  - name: pull-cert-manager-e2e-v1-17
    context: pull-cert-manager-e2e-v1-17
    always_run: false
    optional: true
    max_concurrency: 4
    agent: kubernetes
    decorate: true
    branches:
    - release-1.7
    - release-1.6
    annotations:
      testgrid-create-test-group: 'false'
      description: Runs the end-to-end test suite against a Kubernetes v1.17 cluster
    labels:
      preset-service-account: "true"
      preset-dind-enabled: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-bazel-scratch-dir: "true"
      preset-cloudflare-credentials: "true"
      preset-retry-flakey-tests: "true"
      preset-disable-all-feature-gates: "true"
      preset-ginkgo-skip-default: "true"
    spec:
      containers:
      - image: eu.gcr.io/jetstack-build-infra-images/bazelbuild:20210831-4cf7b0b-4.2.1
        args:
        - runner
        - devel/ci-run-e2e.sh
        resources:
          requests:
            cpu: 3500m
            memory: 12Gi
        env:
        - name: K8S_VERSION
          value: "1.17"
        securityContext:
          privileged: true
          capabilities:
            add: ["SYS_ADMIN"]
        volumeMounts:
        - mountPath: /lib/modules
          name: modules
          readOnly: true
        - mountPath: /sys/fs/cgroup
          name: cgroup
      volumes:
      - name: modules
        hostPath:
          path: /lib/modules
          type: Directory
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: Directory
      dnsConfig:
        options:
        - name: ndots
          value: "1"

  - name: pull-cert-manager-e2e-v1-18
    context: pull-cert-manager-e2e-v1-18
    always_run: false
    optional: true
    max_concurrency: 4
    agent: kubernetes
    decorate: true
    branches:
    - release-1.7
    - release-1.6
    annotations:
      testgrid-create-test-group: 'false'
      description: Runs the end-to-end test suite against a Kubernetes v1.18 cluster
    labels:
      preset-service-account: "true"
      preset-dind-enabled: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-bazel-scratch-dir: "true"
      preset-cloudflare-credentials: "true"
      preset-retry-flakey-tests: "true"
      preset-disable-all-feature-gates: "true"
      preset-ginkgo-skip-default: "true"
    spec:
      containers:
      - image: eu.gcr.io/jetstack-build-infra-images/bazelbuild:20210831-4cf7b0b-4.2.1
        args:
        - runner
        - devel/ci-run-e2e.sh
        resources:
          requests:
            cpu: 3500m
            memory: 12Gi
        env:
        - name: K8S_VERSION
          value: "1.18"
        securityContext:
          privileged: true
          capabilities:
            add: ["SYS_ADMIN"]
        volumeMounts:
        - mountPath: /lib/modules
          name: modules
          readOnly: true
        - mountPath: /sys/fs/cgroup
          name: cgroup
      volumes:
      - name: modules
        hostPath:
          path: /lib/modules
          type: Directory
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: Directory
      dnsConfig:
        options:
        - name: ndots
          value: "1"

  - name: pull-cert-manager-e2e-v1-19
    context: pull-cert-manager-e2e-v1-19
    always_run: false
    optional: true
    max_concurrency: 4
    agent: kubernetes
    decorate: true
    branches:
    - release-1.7
    - release-1.6
    annotations:
      testgrid-create-test-group: 'false'
      description: Runs the end-to-end test suite against a Kubernetes v1.19 cluster
    labels:
      preset-service-account: "true"
      preset-dind-enabled: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-bazel-scratch-dir: "true"
      preset-cloudflare-credentials: "true"
      preset-retry-flakey-tests: "true"
      preset-enable-all-feature-gates: "true"
      preset-ginkgo-skip-default: "true"
    spec:
      containers:
      - image: eu.gcr.io/jetstack-build-infra-images/bazelbuild:20210831-4cf7b0b-4.2.1
        args:
        - runner
        - devel/ci-run-e2e.sh
        resources:
          requests:
            cpu: 3500m
            memory: 12Gi
        env:
        - name: K8S_VERSION
          value: "1.19"
        securityContext:
          privileged: true
          capabilities:
            add: ["SYS_ADMIN"]
        volumeMounts:
        - mountPath: /lib/modules
          name: modules
          readOnly: true
        - mountPath: /sys/fs/cgroup
          name: cgroup
      volumes:
      - name: modules
        hostPath:
          path: /lib/modules
          type: Directory
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: Directory
      dnsConfig:
        options:
        - name: ndots
          value: "1"

  - name: pull-cert-manager-e2e-v1-20
    context: pull-cert-manager-e2e-v1-20
    always_run: false
    optional: true
    max_concurrency: 4
    agent: kubernetes
    decorate: true
    branches:
    - release-1.7
    - release-1.6
    annotations:
      testgrid-create-test-group: 'false'
      description: Runs the end-to-end test suite against a Kubernetes v1.20 cluster
    labels:
      preset-service-account: "true"
      preset-dind-enabled: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-bazel-scratch-dir: "true"
      preset-cloudflare-credentials: "true"
      preset-retry-flakey-tests: "true"
      preset-enable-all-feature-gates: "true"
      preset-ginkgo-skip-default: "true"
    spec:
      containers:
      - image: eu.gcr.io/jetstack-build-infra-images/bazelbuild:20210831-4cf7b0b-4.2.1
        args:
        - runner
        - devel/ci-run-e2e.sh
        resources:
          requests:
            cpu: 3500m
            memory: 12Gi
        env:
        - name: K8S_VERSION
          value: "1.20"
        securityContext:
          privileged: true
          capabilities:
            add: ["SYS_ADMIN"]
        volumeMounts:
        - mountPath: /lib/modules
          name: modules
          readOnly: true
        - mountPath: /sys/fs/cgroup
          name: cgroup
      volumes:
      - name: modules
        hostPath:
          path: /lib/modules
          type: Directory
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: Directory
      dnsConfig:
        options:
        - name: ndots
          value: "1"

  - name: pull-cert-manager-e2e-v1-21
    context: pull-cert-manager-e2e-v1-21
    always_run: false
    optional: true
    max_concurrency: 4
    agent: kubernetes
    decorate: true
    branches:
    - release-1.7
    - release-1.6
    annotations:
      testgrid-create-test-group: 'false'
      description: Runs the end-to-end test suite against a Kubernetes v1.21 cluster
    labels:
      preset-service-account: "true"
      preset-dind-enabled: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-bazel-scratch-dir: "true"
      preset-cloudflare-credentials: "true"
      preset-retry-flakey-tests: "true"
      preset-enable-all-feature-gates: "true"
      preset-ginkgo-skip-default: "true"
    spec:
      containers:
      - image: eu.gcr.io/jetstack-build-infra-images/bazelbuild:20210831-4cf7b0b-4.2.1
        args:
        - runner
        - devel/ci-run-e2e.sh
        resources:
          requests:
            cpu: 3500m
            memory: 12Gi
        env:
        - name: K8S_VERSION
          value: "1.21"
        securityContext:
          privileged: true
          capabilities:
            add: ["SYS_ADMIN"]
        volumeMounts:
        - mountPath: /lib/modules
          name: modules
          readOnly: true
        - mountPath: /sys/fs/cgroup
          name: cgroup
      volumes:
      - name: modules
        hostPath:
          path: /lib/modules
          type: Directory
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: Directory
      dnsConfig:
        options:
        - name: ndots
          value: "1"

  - name: pull-cert-manager-e2e-v1-22
    context: pull-cert-manager-e2e-v1-22
    # This is the default e2e test for all PRs.
    always_run: true
    optional: false
    max_concurrency: 4
    agent: kubernetes
    decorate: true
    branches:
    - release-1.7
    - release-1.6
    annotations:
      testgrid-create-test-group: 'false'
      description: Runs the end-to-end test suite against a Kubernetes v1.22 cluster
    labels:
      preset-service-account: "true"
      preset-dind-enabled: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-bazel-scratch-dir: "true"
      preset-cloudflare-credentials: "true"
      preset-retry-flakey-tests: "true"
      preset-enable-all-feature-gates: "true"
      preset-ginkgo-skip-default: "true"
    spec:
      containers:
      - image: eu.gcr.io/jetstack-build-infra-images/bazelbuild:20210831-4cf7b0b-4.2.1
        args:
        - runner
        - devel/ci-run-e2e.sh
        resources:
          requests:
            cpu: 3500m
            memory: 12Gi
        env:
        - name: K8S_VERSION
          value: "1.22"
        securityContext:
          privileged: true
          capabilities:
            add: ["SYS_ADMIN"]
        volumeMounts:
        - mountPath: /lib/modules
          name: modules
          readOnly: true
        - mountPath: /sys/fs/cgroup
          name: cgroup
      volumes:
      - name: modules
        hostPath:
          path: /lib/modules
          type: Directory
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: Directory
      dnsConfig:
        options:
        - name: ndots
          value: "1"

  # An E2E test job to allow us to manually trigger the Venafi Cloud E2E tests
  # with the following GitHub comment:
  #
  #  /test pull-cert-manager-e2e-issuers-venafi-cloud-previous
  #
  # The regular presubmit jobs do not run Venafi Cloud e2e tests.
  #
  - name: pull-cert-manager-e2e-issuers-venafi-cloud-previous
    always_run: false
    optional: true
    max_concurrency: 4
    agent: kubernetes
    decorate: true
    branches:
    - release-1.7
    - release-1.6
    annotations:
      description: Runs the E2E tests with 'Venafi TPP' in name
    labels:
      preset-service-account: "true"
      preset-dind-enabled: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-bazel-scratch-dir: "true"
      preset-venafi-tpp-credentials: "true"
      preset-retry-flakey-tests: "true"
      preset-ginkgo-focus-venafi-tpp: "true"
    spec:
      containers:
      - image: eu.gcr.io/jetstack-build-infra-images/bazelbuild:20210831-4cf7b0b-4.2.1
        args:
        - runner
        - devel/ci-run-e2e.sh
        resources:
          requests:
            cpu: 3500m
            memory: 12Gi
        env:
        - name: K8S_VERSION
          value: "1.22"
        securityContext:
          privileged: true
          capabilities:
            add: ["SYS_ADMIN"]
        volumeMounts:
        - mountPath: /lib/modules
          name: modules
          readOnly: true
        - mountPath: /sys/fs/cgroup
          name: cgroup
      volumes:
      - name: modules
        hostPath:
          path: /lib/modules
          type: Directory
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: Directory
      dnsConfig:
        options:
        - name: ndots
          value: "1"

  # An E2E test job to allow us to manually trigger the Venafi TPP E2E tests
  # with the following GitHub comment:
  #
  #  /test pull-cert-manager-e2e-issuers-venafi-tpp-previous
  #
  # The regular presubmit jobs do not run Venafi TPP e2e tests.
  #
  - name: pull-cert-manager-e2e-issuers-venafi-tpp-previous
    always_run: false
    optional: true
    max_concurrency: 4
    agent: kubernetes
    decorate: true
    branches:
    - release-1.7
    - release-1.6
    annotations:
      description: Runs the E2E tests with 'Venafi Cloud' in name
    labels:
      preset-service-account: "true"
      preset-dind-enabled: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-bazel-scratch-dir: "true"
      preset-venafi-cloud-credentials: "true"
      preset-retry-flakey-tests: "true"
      preset-ginkgo-focus-venafi-cloud: "true"
    spec:
      containers:
      - image: eu.gcr.io/jetstack-build-infra-images/bazelbuild:20210831-4cf7b0b-4.2.1
        args:
        - runner
        - devel/ci-run-e2e.sh
        resources:
          requests:
            cpu: 3500m
            memory: 12Gi
        env:
        - name: K8S_VERSION
          value: "1.22"
        securityContext:
          privileged: true
          capabilities:
            add: ["SYS_ADMIN"]
        volumeMounts:
        - mountPath: /lib/modules
          name: modules
          readOnly: true
        - mountPath: /sys/fs/cgroup
          name: cgroup
      volumes:
      - name: modules
        hostPath:
          path: /lib/modules
          type: Directory
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: Directory
      dnsConfig:
        options:
        - name: ndots
          value: "1"
