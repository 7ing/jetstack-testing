load("//prow:prow.bzl", "release", "component", "MULTI_KIND", "BUILD_CONTEXT")

# Usage:
#   bazel run //prow/cluster:foo.apply

release(
    "production",
    component(
        "branchprotector",
        "cronjob",
        images = {
            "{PROW_DOCKER_REPO}/prow-branchprotector:latest": "@test_infra//prow/cmd/branchprotector:image",
        },
    ),
    component(
        "deck",
        "deployment",
        "service",
        "rbac",
        images = {
            "{PROW_DOCKER_REPO}/prow-deck:latest": "@test_infra//prow/cmd/deck:image",
        },
    ),
    component("gce-ssd-retain", "storageclass"),
    component(
        "ghproxy",
        "service",
        "deployment",
        images = {
            "{PROW_DOCKER_REPO}/prow-ghproxy:latest": "@test_infra//ghproxy:image",
        },
    ),
    component(
        "hook",
        "service",
        "deployment",
        "rbac",
        images = {
            "{PROW_DOCKER_REPO}/prow-hook:latest": "@test_infra//prow/cmd/hook:image",
        },
    ),
    component(
        "horologium",
        "deployment",
        "rbac",
        images = {
            "{PROW_DOCKER_REPO}/prow-horologium:latest": "@test_infra//prow/cmd/horologium:image",
        },
    ),
    component("lego", "deployment"),
    component(
        "mem-limit-range",
        "limitrange",
        context = BUILD_CONTEXT,
    ),
    component(
        "plank",
        "deployment",
        "rbac",
        images = {
            "{PROW_DOCKER_REPO}/prow-plank:latest": "@test_infra//prow/cmd/plank:image",
        },
    ),
    component("prowjob", "customresourcedefinition"),
    component("pushgateway", "deployment"),
    component(
        "sinker",
        "deployment",
        "rbac",
        images = {
            "{PROW_DOCKER_REPO}/prow-sinker:latest": "@test_infra//prow/cmd/sinker:image",
        },
    ),
    component(
        "splice",
        "deployment",
        images = {
            "{PROW_DOCKER_REPO}/prow-splice:latest": "@test_infra//prow/cmd/splice:image",
        },
    ),
    component(
        "tide",
        "service",
        "deployment",
        "rbac",
        images = {
            "{PROW_DOCKER_REPO}/prow-tide:latest": "@test_infra//prow/cmd/tide:image",
        },
    ),
    component("tls-ing", "ingress"),
    component(
        "tot",
        "service",
        "deployment",
        images = {
            "{PROW_DOCKER_REPO}/prow-tot:latest": "@test_infra//prow/cmd/tot:image",
        },
    ),
    component(
        "needs-rebase",
        "deployment",
        "service",
        images = {
            "{PROW_DOCKER_REPO}/prow-needs-rebase:latest": "@test_infra//prow/external-plugins/needs-rebase:image",
        },
    ),
)

filegroup(
    name = "package-srcs",
    srcs = glob(["**"]),
    tags = ["automanaged"],
    visibility = ["//visibility:private"],
)

filegroup(
    name = "all-srcs",
    srcs = [":package-srcs"],
    tags = ["automanaged"],
    visibility = ["//visibility:public"],
)
